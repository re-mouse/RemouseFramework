using System.Collections.Generic;using Remouse.Simulation;using Remouse.Network.Models;using Remouse.Serialization;namespace Remouse.Simulation.Network{    public class SimulationUpdateMessage : NetworkMessage    {        public HashSet<BaseWorldCommand> Commands { get; private set; } = new HashSet<BaseWorldCommand>();        public long Tick { get; private set; }                private List<CommandContainer> _commandContainers = new List<CommandContainer>();        public SimulationUpdateMessage()        {                    }                public SimulationUpdateMessage(HashSet<BaseWorldCommand> commands, long tick)        {            Commands = commands;            Tick = tick;            foreach (var command in Commands)            {                _commandContainers.Add(new CommandContainer(command));            }        }        public override void Serialize(IBytesWriter writer)        {            writer.WriteList(_commandContainers);            writer.WriteLong(Tick);        }        public override void Deserialize(IBytesReader reader)        {            reader.ReadList(ref _commandContainers);            foreach (var commandContainer in _commandContainers)            {                Commands.Add(commandContainer.command);            }            Tick = reader.ReadLong();        }    }    public struct CommandContainer : IBytesSerializable    {        public ushort commandTypeId;        public BaseWorldCommand command;        public CommandContainer(BaseWorldCommand command)        {            commandTypeId = TypeSerializer<BaseWorldCommand>.GetTypeId(command);            this.command = command;        }        public void Serialize(IBytesWriter writer)        {            writer.WriteUShort(commandTypeId);            command.Serialize(writer);        }        public void Deserialize(IBytesReader reader)        {            commandTypeId = reader.ReadUShort();            command = TypeSerializer<BaseWorldCommand>.GetNew(commandTypeId);            command.Deserialize(reader);        }    }}